name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DEVELOPER_DIR: /Applications/Xcode_16.1.app/Contents/Developer

jobs:
  test:
    name: Test
    runs-on: macos-15
    
    strategy:
      matrix:
        scheme: [Kalendar]
        destination: 
          - 'platform=iOS Simulator,name=iPhone 16,OS=18.1'
          - 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=18.1'
          - 'platform=iOS Simulator,name=iPad Pro (12.9-inch) (6th generation),OS=18.1'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Cache derived data
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-derived-data-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-derived-data-

    - name: Cache SPM dependencies
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - name: List available simulators
      run: xcrun simctl list devices available

    - name: Build
      run: |
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme ${{ matrix.scheme }} \
          -destination "${{ matrix.destination }}" \
          -configuration Debug \
          clean build \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Test
      run: |
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme ${{ matrix.scheme }} \
          -destination "${{ matrix.destination }}" \
          -configuration Debug \
          test \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.destination }}
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult

  ui-test:
    name: UI Tests
    runs-on: macos-15
    
    strategy:
      matrix:
        device: 
          - 'iPhone 16'
          - 'iPhone 16 Pro Max'
          - 'iPad Pro (12.9-inch) (6th generation)'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Cache derived data
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-ui-derived-data-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ui-derived-data-

    - name: Boot Simulator
      run: |
        DEVICE_ID=$(xcrun simctl create "Test-${{ matrix.device }}" "${{ matrix.device }}" "iOS18.1")
        xcrun simctl boot $DEVICE_ID
        xcrun simctl list devices | grep "Test-${{ matrix.device }}"

    - name: Run UI Tests
      run: |
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme Kalendar \
          -destination "platform=iOS Simulator,name=Test-${{ matrix.device }}" \
          -configuration Debug \
          test \
          -only-testing:KalendarUITests \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Upload UI Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ui-test-results-${{ matrix.device }}
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult
          
    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots-${{ matrix.device }}
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Attachments/**/*.png

  widget-test:
    name: Widget Tests
    runs-on: macos-15
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Test Widget Extensions
      run: |
        # Test main app which includes widget extensions
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme Kalendar \
          -destination "platform=iOS Simulator,name=iPhone 16,OS=18.1" \
          -configuration Debug \
          build \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

  lint:
    name: Lint
    runs-on: macos-15
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Install SwiftLint
      run: brew install swiftlint

    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

    - name: Analyze Code
      run: |
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme Kalendar \
          -destination "platform=iOS Simulator,name=iPhone 16,OS=18.1" \
          -configuration Debug \
          analyze \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

  security:
    name: Security Scan
    runs-on: macos-15
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run security scan
      run: |
        # Check for hardcoded secrets
        if grep -r "password\|secret\|key\|token" --include="*.swift" --include="*.m" --include="*.h" . | grep -v "// Test" | grep -v "placeholder"; then
          echo "❌ Potential hardcoded secrets found"
          exit 1
        else
          echo "✅ No hardcoded secrets found"
        fi

    - name: Check Info.plist files
      run: |
        find . -name "Info.plist" -exec plutil -lint {} \;

  coverage:
    name: Code Coverage
    runs-on: macos-15
    needs: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Generate Code Coverage
      run: |
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme Kalendar \
          -destination "platform=iOS Simulator,name=iPhone 16,OS=18.1" \
          -configuration Debug \
          test \
          -enableCodeCoverage YES \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./DerivedData/Kalendar/Logs/Test/*.xcresult
        fail_ci_if_error: false

  performance:
    name: Performance Tests
    runs-on: macos-15
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Run Performance Tests
      run: |
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme Kalendar \
          -destination "platform=iOS Simulator,name=iPhone 16,OS=18.1" \
          -configuration Release \
          test \
          -only-testing:KalendarTests/testCalendarGenerationPerformance \
          -only-testing:KalendarUITests/testLaunchPerformance \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Upload Performance Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: |
          ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/*.xcresult

  build-release:
    name: Build Release
    runs-on: macos-15
    if: github.ref == 'refs/heads/main'
    needs: [test, ui-test, widget-test, lint, security]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.1'

    - name: Build Release
      run: |
        xcodebuild \
          -project Kalendar.xcodeproj \
          -scheme Kalendar \
          -configuration Release \
          -archivePath ./build/Kalendar.xcarchive \
          archive \
          CODE_SIGNING_ALLOWED=NO \
          | xcpretty && exit ${PIPESTATUS[0]}

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-build
        path: ./build/
